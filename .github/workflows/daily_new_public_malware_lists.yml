name: Daily scans of daily new entries from public malware lists

on: 
  schedule:
    - cron:  '20 05 * * *'

jobs:
  pub_malware_lists:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ssh-key: ${{ secrets.SSH_PRIVKEY_TO_REPORT_PRIVATE }}
        repository: maaaaz/report_malware
        path: ./REPORT_MALWARE_PRIVATE
    
    - name: Set $REPORT_MALWARE_PRIVATE environment variable for the rest of the workflow
      run: echo "REPORT_MALWARE_PRIVATE=$GITHUB_WORKSPACE/REPORT_MALWARE_PRIVATE" >> $GITHUB_ENV
    
    - name: What time is it ?
      run: |
        date -u
        TZ="Europe/Paris" date
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install prerequisites
      run: |
        pip install csvkit
        
    - name: Download daily data from different sources (CERT-PL, AMF, ABEIS, Jeroen Gui etc.)
      run: |
        cd /tmp/

        # CERT-PL
        wget -nv "https://hole.cert.pl/domains/v2/domains.json" -O cert_pl_domains.json
        jq --raw-output -M '[.[] | select(.InsertDate [:10] >= (now-86400 | strftime("%Y-%m-%d")))] | .[] | .DomainAddress' cert_pl_domains.json > ./cert_pl_new_entries.txt
        wc ./cert_pl_new_entries.txt

        # AMF 
        wget -nv "https://www.data.gouv.fr/fr/datasets/r/d2d9df6d-1cd2-41a8-96f5-684cb3057ecb" -O amf_liste_noire.csv
        csvsql -d ';' -u 1 "./amf_liste_noire.csv" --tables db --query "SELECT nom FROM db WHERE date_inscription >= DATE(DATE(), '-9 days');" | sed 1d > amf_new_entries_temp.txt
        iconv -t ASCII//TRANSLIT ./amf_new_entries_temp.txt | sed -E 's/(.*)[/](.*)/http:\/\/\1\/\2/g' > ./amf_new_entries.txt
        wc ./amf_new_entries.txt

        # ABEIS
        wget -nv "https://www.abe-infoservice.fr/abeis-liste-noire.csv" -O abeis_liste_noire.csv
        csvsql abeis_liste_noire.csv --tables db --query "SELECT \"URL / Mails\" FROM db WHERE \"Date d'inscription\" >= DATE(DATE(), '-2 days');" --date-format "%d/%m/%Y" | sed 1d > abeis_new_entries_temp.txt
        iconv -t ASCII//TRANSLIT ./abeis_new_entries_temp.txt | sed -E 's/(.*)[/](.*)/http:\/\/\1\/\2/g' > ./abeis_new_entries.txt
        wc ./abeis_new_entries.txt

        # Jeroen Gui
        echo "malware scam phishing punycode web_shell" | tr ' ' '\n' | parallel "wget -nv https://file.jeroengui.be/{}/last_24_hours.txt -O - | grep -Pi '^http' >> ./jeroen_new_entries.txt"
        wc ./jeroen_new_entries.txt

        # Consolidating in a single file
        cat ./cert_pl_new_entries.txt ./amf_new_entries.txt ./abeis_new_entries.txt | sort -u > full_list

    - name: Submit to CRDF
      env:
        SECRET_CRDF_API_KEY: ${{ secrets.SECRET_CRDF_API_KEY }}
        
      run: |
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/crdf.py"
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/crdf_requirements.txt"
        python -m pip install --upgrade pip
        pip install -r ./crdf_requirements.txt
        
        python /tmp/crdf.py -a submit -i "/tmp/full_list"
        python /tmp/crdf.py -a submit -i "/tmp/jeroen_new_entries.txt"

    - name: Push to AlienVault pulses
      continue-on-error: true
      env:
        SECRET_ALIENVAULT_API_KEY: ${{ secrets.SECRET_ALIENVAULT_API_KEY }}
        
      run: |
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/alienvault.py"
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/alienvault_requirements.txt"
        pip install -r ./alienvault_requirements.txt
        
        python /tmp/alienvault.py -p "653e8484ba7c285929cb5e0d" -i "/tmp/cert_pl_new_entries.txt" 
        python /tmp/alienvault.py -p "659fe4da4b22503aebecde36" -i "/tmp/amf_new_entries.txt"
        python /tmp/alienvault.py -p "65f22b33b4941a1d765d18cd" -i "/tmp/abeis_new_entries.txt"
        python /tmp/alienvault.py -p "662e0a50715909a2ce36d1d5" -i "/tmp/jeroen_new_entries.txt"

    - name: Install Netcraft dependencies and download the script
      run: |
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/netcraft.py"
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/netcraft_requirements.txt"
        pip install -r ./netcraft_requirements.txt

    - name: Submit to Netcraft
      continue-on-error: true
      env:
        SECRET_NETCRAFT_REPORT_MAIL: ${{ secrets.SECRET_NETCRAFT_REPORT_MAIL }}
        
      run: |
        cd /tmp/
        TZ="Europe/Paris" date
        
        (TZ="Europe/Paris" date && python /tmp/netcraft.py -a submit -i "/tmp/full_list";) > /dev/null
        (TZ="Europe/Paris" date && python /tmp/netcraft.py -a submit -i "/tmp/jeroen_new_entries.txt";) > /dev/null


    - name: Install urlscan dependencies
      run: |
        pip install -r $REPORT_MALWARE_PRIVATE/urlscan.io/requirements.txt
              
    - name: Scan on urlscan.io
      env: 
        SECRET_URLSCANIO_API_KEY: ${{ secrets.SECRET_URLSCANIO_API_KEY_FREELISTS }}
        SECRET_URLSCANIO_LOGIN: ${{ secrets.SECRET_URLSCANIO_LOGIN_FREELISTS }}
        SECRET_URLSCANIO_PASSWORD: ${{ secrets.SECRET_URLSCANIO_PASSWORD }}
                
      run: |
        cd /tmp/
        python -Wall "$REPORT_MALWARE_PRIVATE/urlscan.io/urlscan_io.py" -i "/tmp/full_list" -a submit -p http

    - name: Submit to Spamhaus
      env: 
        SECRET_SPAMHAUS_API_KEY: ${{ secrets.SECRET_SPAMHAUS_API_KEY }}
      
      run: |
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/spamhaus.py"
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/spamhaus_requirements.txt"
        pip install -r ./spamhaus_requirements.txt
        
        python -Wall ./spamhaus.py -i ./cert_pl_new_entries.txt -r 'See https://cert.pl/lista-ostrzezen/ and https://hole.cert.pl/domains/v2/domains.json'
        python -Wall ./spamhaus.py -i ./amf_new_entries.txt -r 'See https://protectepargne.amf-france.org and https://www.data.gouv.fr/en/datasets/listes-noires-des-entites-non-autorisees-a-proposer-des-produits-ou-services-financiers-en-france/'
        python -Wall ./spamhaus.py -i ./abeis_new_entries.txt -r 'See https://www.abe-infoservice.fr'
        python -Wall ./spamhaus.py -i ./jeroen_new_entries.txt -r 'See https://file.jeroengui.be and https://jeroengui.be'
