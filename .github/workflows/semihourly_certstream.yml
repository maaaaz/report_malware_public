name: Semihourly watch of suspicious new domains from certstream and submit them

on: workflow_dispatch
  #schedule:
    #- cron:  '15,45 * * * *'

jobs:
  semihourly_report_certstream:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVKEY_TO_REPORT_PRIVATE }}
        repository: maaaaz/report_malware
        path: ./REPORT_MALWARE_PRIVATE
    
    - name: Set $REPORT_MALWARE_PRIVATE environment variable for the rest of the workflow
      run: echo "REPORT_MALWARE_PRIVATE=$GITHUB_WORKSPACE/REPORT_MALWARE_PRIVATE" >> $GITHUB_ENV
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: What time is it ?
      run: |
        date -u
        TZ="Europe/Paris" date
    
    - name: Install certstream
      run: |
        python -m pip install --upgrade pip
        pip install certstream
        
    - name: Run certstream for 30 minutes
      run: |
        cd /tmp/

        # -- temp bug fix from certstream unavailability
        #time (timeout -s 9 31m bash -c "certstream --json | jq -r '.data.leaf_cert.all_domains[]' > ./certstream_dump_raw" || true)

        wget -nv "https://github.com/d-Rickyy-b/certstream-server-go/releases/download/v1.4.0/certstream-server-go_1.4.0_linux_amd64" && chmod u+x ./certstream-server-go_1.4.0_linux_amd64
        cat > /tmp/config.yaml <<EOL
         webserver:
          listen_addr: "127.0.0.1"
          listen_port: 8080
          full_url: "/full-stream"
          lite_url: "/"
          domains_only_url: "/domains-only"
          cert_path: ""
          cert_key_path: ""
        
        prometheus:
          enabled: false
          listen_addr: "0.0.0.0"
          listen_port: 8080
          metrics_url: "/metrics"
          expose_system_metrics: false
          real_ip: false
          whitelist:
            - "127.0.0.1/8"
        EOL
        nohup ./certstream-server-go_1.4.0_linux_amd64 &
        
        time (timeout -s 9 31m bash -c "certstream --url ws://127.0.0.1:8080 --json | jq -r '.data.leaf_cert.all_domains[]' > ./certstream_dump_raw" || true)
        sed 's/^\*\.//g' "./certstream_dump_raw" | sort -u > "./certstream_dump"
        
        echo '[+] results certstream'
        wc "./certstream_dump"
        ls -alh "./certstream_dump"
        head "./certstream_dump"
    
    - name: Install opensquat
      run: |
        cd /tmp/
        git clone https://github.com/maaaaz/opensquat.git
        pip install -r ./opensquat/requirements.txt
    
    - name: Run opensquat
      run: |
        cd /tmp/opensquat/
        python opensquat.py -d "/tmp/certstream_dump" -k "$REPORT_MALWARE_PRIVATE/keywords/keywords.txt" > /dev/null
        
        echo '[+] results opensquat'
        mv "./results.txt" "./results_unsorted.txt"
        sort -u "./results_unsorted.txt" > "./results.txt"
        ls -al "./results.txt"
        wc "./results.txt"
        head "./results.txt"
        
    - name: Install Netcraft dependencies
      run: |
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/netcraft.py"
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/netcraft_requirements.txt"
        pip install -r ./netcraft_requirements.txt
        
    - name: Submit watched queries results to Netcraft
      env:
        SECRET_NETCRAFT_REPORT_MAIL: ${{ secrets.SECRET_NETCRAFT_REPORT_MAIL }}
        
      run: |
        cd $REPORT_MALWARE_PRIVATE
        TODAY_NETCRAFT_SUBS_DIR=$REPORT_MALWARE_PRIVATE/$(date '+%Y/%m/%Y-%m-%d/netcraft')
        mkdir -p "$TODAY_NETCRAFT_SUBS_DIR"
        TODAY_NETCRAFT_SUBS_FILE=$TODAY_NETCRAFT_SUBS_DIR/submissions.txt
        
        cd /tmp/
        TZ="Europe/Paris" date
        (TZ="Europe/Paris" date && python /tmp/netcraft.py -a submit -i "/tmp/opensquat/results.txt";) > /tmp/temp_netcraft_results
        
        cd $REPORT_MALWARE_PRIVATE
        git pull --ff-only
        cat /tmp/temp_netcraft_results >> $TODAY_NETCRAFT_SUBS_FILE
        
        # -- git stuff
        cd $REPORT_MALWARE_PRIVATE
        git config user.name netcraft-subs-bot
        git config user.email github-actions@github.com
        git add $TODAY_NETCRAFT_SUBS_FILE
        git commit -m "semihourly certstream scan to netcraft" $TODAY_NETCRAFT_SUBS_FILE
        git pull --rebase
        git push
