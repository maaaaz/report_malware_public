name: Daily scans of daily new domain names from DNS registries 

on:
  schedule:
    - cron:  '00 01 * * *'

jobs:
  DNS_registries:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVKEY_TO_REPORT_PRIVATE }}
        repository: maaaaz/report_malware
        path: ./REPORT_MALWARE_PRIVATE
    
    - name: Set $REPORT_MALWARE_PRIVATE environment variable for the rest of the workflow
      run: echo "REPORT_MALWARE_PRIVATE=$GITHUB_WORKSPACE/REPORT_MALWARE_PRIVATE" >> $GITHUB_ENV
    
    - name: What time is it ?
      run: |
        date -u
        TZ="Europe/Paris" date
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install resolver dependencies and download the script
      run: |
        python -m pip install --upgrade pip
        pip install csvkit
        
        cd /tmp/
        wget -nv https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/resolver.py
        wget -nv https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/resolver_requirements.txt
        pip install -r ./resolver_requirements.txt
        wget -nv "https://github.com/maaaaz/zmapproject_binaries/raw/main/linux-x64/zdns/zdns" && chmod u+x ./zdns
        
    - name: Download daily data from different sources (AFNIC, dailynrdscan etc.)
      run: |
        cd /tmp/
        wget -nv https://www.afnic.fr/wp-media/ftp/domaineTLD_Afnic/$(date --date='yesterday' '+%Y%m%d')_CREA_{fr,re,pm,tf,wf,yt}.txt
        cat *_CREA_*  | grep -Pv '^#' | sort -u | grep --color=none . > new_ICANN_domains
        
        wget -nv "https://raw.githubusercontent.com/maaaaz/dnsdumps/main/daily/today_new.gz" -O "./dailynrdscan_today_new.gz"
        zcat "./dailynrdscan_today_new.gz" >> new_ICANN_domains
     
    - name: Resolve data
      run: |
        cd /tmp/
        ls -alh new_ICANN_domains
        
        # testing
        #echo 'toto.fr' > ./new_ICANN_domains
        
        time ./zdns --input-file "/tmp/new_ICANN_domains" --name-servers "9.9.9.9,149.112.112.112,1.1.1.1,8.8.8.8,1.0.0.1,208.67.222.222,208.67.220.123" --output-file temp_zdns_results_A A
        ls -alh temp_zdns_results_A && wc temp_zdns_results_A
        
        time ./zdns --input-file "/tmp/new_ICANN_domains" --name-servers "9.9.9.9,149.112.112.112,1.1.1.1,8.8.8.8,1.0.0.1,208.67.222.222,208.67.220.123" --output-file temp_zdns_results_AAAA AAAA
        ls -alh temp_zdns_results_AAAA && wc temp_zdns_results_AAAA
        
        cat temp_zdns_results_* > ./zdns_results.txt
        ls -alh zdns_results.txt && wc zdns_results.txt
        
        python -Wall resolver.py -z ./zdns_results.txt -o ./new_ICANN_domains_resolved.csv
        
        SQLALCHEMY_SILENCE_UBER_WARNING=1 csvsql -u 1 ./new_ICANN_domains_resolved.csv --tables db --query 'SELECT netloc_idna_decoded FROM db WHERE (ipv4 IS NOT NULL) OR (ipv6 IS NOT NULL)' | sed 1d > /tmp/new_ICANN_domains_with_existing_IPv4_or_IPv6
        split --numeric-suffixes=1 -n 23 "./new_ICANN_domains_with_existing_IPv4_or_IPv6" new_ICANN_domains_with_existing_IPv4_or_IPv6_
        
        ls -alh new_ICANN_domains_with_existing_IPv4_or_IPv6 && wc new_ICANN_domains_with_existing_IPv4_or_IPv6
        ls -alh new_ICANN_domains_with_existing_IPv4_or_IPv6_* && wc new_ICANN_domains_with_existing_IPv4_or_IPv6_*
    
    - name: Git pull $REPORT_MALWARE_PRIVATE
      run: |
        cd $REPORT_MALWARE_PRIVATE
        git pull --ff-only
        
    - name: Install Netcraft dependencies and download the script
      run: |
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/netcraft.py"
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/netcraft_requirements.txt"
        pip install -r ./netcraft_requirements.txt
        
    - name: Submit to Netcraft
      continue-on-error: true
      env:
        SECRET_NETCRAFT_REPORT_MAIL: ${{ secrets.SECRET_NETCRAFT_REPORT_MAIL }}
        
      run: |
        cd $REPORT_MALWARE_PRIVATE
        git pull --ff-only
        
        TODAY_NETCRAFT_SUBS_DIR=$REPORT_MALWARE_PRIVATE/$(date '+%Y/%m/%Y-%m-%d/netcraft')
        mkdir -p "$TODAY_NETCRAFT_SUBS_DIR"
        TODAY_NETCRAFT_SUBS_FILE=$TODAY_NETCRAFT_SUBS_DIR/submissions.txt
                
        cd /tmp/
        TZ="Europe/Paris" date
        (TZ="Europe/Paris" date && python /tmp/netcraft.py -a submit -i "/tmp/new_ICANN_domains_with_existing_IPv4_or_IPv6";) > /tmp/temp_netcraft_results
        
        cd $REPORT_MALWARE_PRIVATE
        git pull --ff-only
        cat /tmp/temp_netcraft_results >> $TODAY_NETCRAFT_SUBS_FILE
        
        # -- git stuff
        cd $REPORT_MALWARE_PRIVATE
        git config user.name netcraft-subs-bot
        git config user.email github-actions@github.com
        git add $TODAY_NETCRAFT_SUBS_FILE
        git commit -m "netcraft sub of ICANN daily new domains" $TODAY_NETCRAFT_SUBS_FILE
        git pull --rebase
        git push
        
    - name: Submit to CRDF
      env:
        SECRET_CRDF_API_KEY: ${{ secrets.SECRET_CRDF_API_KEY }}
        
      run: |
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/crdf.py"
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/crdf_requirements.txt"
        pip install -r ./crdf_requirements.txt
        python /tmp/crdf.py -a submit -i "/tmp/new_ICANN_domains_with_existing_IPv4_or_IPv6"  

    - name: Install pylookyloo
      run: |
        pip install pylookyloo
        
    - name: Scan to Lookyloo
      run: |
        awk '{print "http://"$1"\n""https://"$1}' "/tmp/new_ICANN_domains_with_existing_IPv4_or_IPv6" > "/tmp/new_ICANN_domains_with_existing_IPv4_or_IPv6_expanded"
        parallel -a "/tmp/new_ICANN_domains_with_existing_IPv4_or_IPv6_expanded" 'lookyloo --listing --query {} >> /tmp/lookyloo_scans'
        head "/tmp/lookyloo_scans"
