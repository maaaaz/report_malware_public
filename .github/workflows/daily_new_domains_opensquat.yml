name: Daily scans of daily new domain names from OpenSquat feeds

on: [push]
  #schedule:
    #- cron:  '45 07 * * *'

jobs:
  WhoisDS:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVKEY_TO_REPORT_PRIVATE }}
        repository: maaaaz/report_malware
        path: ./REPORT_MALWARE_PRIVATE
    
    - name: Set $REPORT_MALWARE_PRIVATE environment variable for the rest of the workflow
      run: echo "REPORT_MALWARE_PRIVATE=$GITHUB_WORKSPACE/REPORT_MALWARE_PRIVATE" >> $GITHUB_ENV
    
    - name: What time is it ?
      run: |
        date -u
        TZ="Europe/Paris" date
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install resolver dependencies and download the script
      run: |
        python -m pip install --upgrade pip
        pip install csvkit
        
        cd /tmp/
        wget -nv https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/resolver.py
        wget -nv https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/resolver_requirements.txt
        pip install -r ./resolver_requirements.txt
    
    - name: Download WhoisDS daily Newly Registered Domains
      run: |
        cd /tmp/
        wget -nv "https://github.com/maaaaz/nrd-list-downloader/raw/master/nrd-list-downloader.sh"
        chmod u+x "./nrd-list-downloader.sh"
        DAY_RANGE=1 "./nrd-list-downloader.sh"    
    
    - name: Install opensquat
      run: |
        cd /tmp/
        git clone https://github.com/maaaaz/opensquat.git
        pip install -r ./opensquat/requirements.txt
    
    - name: Run opensquat
      run: |
        cd /tmp/opensquat/
        
        # need here a diff between WhoisDS NRD and OpenSquat ones
        
        python opensquat.py -k "$REPORT_MALWARE_PRIVATE/keywords/keywords.txt" > /dev/null
        
        echo '[+] results opensquat'
        mv "./results.txt" "./results_unsorted.txt"
        sort -u "./results_unsorted.txt" > "./results.txt"
        ls -al "./results.txt"
        wc "./results.txt"
        head "./results.txt"
        
    - name: Install Netcraft dependencies and download the script
      run: |
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/netcraft.py"
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/netcraft_requirements.txt"
        pip install -r ./netcraft_requirements.txt
        
    - name: Submit to Netcraft
      continue-on-error: true
      env:
        SECRET_NETCRAFT_REPORT_MAIL: ${{ secrets.SECRET_NETCRAFT_REPORT_MAIL }}
        
      run: |
        cd $REPORT_MALWARE_PRIVATE
        git pull --ff-only
        
        TODAY_NETCRAFT_SUBS_DIR=$REPORT_MALWARE_PRIVATE/$(date '+%Y/%m/%Y-%m-%d/netcraft')
        mkdir -p "$TODAY_NETCRAFT_SUBS_DIR"
        TODAY_NETCRAFT_SUBS_FILE=$TODAY_NETCRAFT_SUBS_DIR/submissions.txt
                
        cd /tmp/
        
        TZ="Europe/Paris" date
        (TZ="Europe/Paris" date && python /tmp/netcraft.py -a submit -i "/tmp/opensquat/results.txt";) >> $TODAY_NETCRAFT_SUBS_FILE
        
        # -- git stuff
        cd $REPORT_MALWARE_PRIVATE
        git config user.name netcraft-subs-bot
        git config user.email github-actions@github.com
        git add $TODAY_NETCRAFT_SUBS_FILE
        git commit -m "netcraft sub of OpenSquat daily new domains" $TODAY_NETCRAFT_SUBS_FILE
        git pull --ff-only
        git push
        
    - name: Resolve data
      run: |
        cd /tmp/
        python -Wall resolver.py -i "/tmp/opensquat/results.txt" -o "./new_OpenSquat_domains_resolved.csv"
        SQLALCHEMY_SILENCE_UBER_WARNING=1 csvsql -u 1 "./new_OpenSquat_domains_resolved.csv" --tables db --query 'SELECT netloc_idna_decoded FROM db WHERE (ipv4 IS NOT NULL) OR (ipv6 IS NOT NULL)' | sed 1d > "/tmp/new_OpenSquat_domains_with_existing_IPv4_or_IPv6"
        ls -alh "/tmp/new_OpenSquat_domains_with_existing_IPv4_or_IPv6" && wc "/tmp/new_OpenSquat_domains_with_existing_IPv4_or_IPv6"
    
    - name: Submit to CRDF
      env:
        SECRET_CRDF_API_KEY: ${{ secrets.SECRET_CRDF_API_KEY }}
        
      run: |
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/crdf.py"
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/crdf_requirements.txt"
        pip install -r ./crdf_requirements.txt
        python /tmp/crdf.py -a submit -i "/tmp/new_OpenSquat_domains_with_existing_IPv4_or_IPv6"
    
    - name: Install urlscan dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r $REPORT_MALWARE_PRIVATE/urlscan.io/requirements.txt    
    
    - name: Scan to urlscan.io
      env: 
        SECRET_URLSCANIO_API_KEY: ${{ secrets.SECRET_URLSCANIO_API_KEY }}
        SECRET_URLSCANIO_LOGIN: ${{ secrets.SECRET_URLSCANIO_LOGIN }}
        SECRET_URLSCANIO_PASSWORD: ${{ secrets.SECRET_URLSCANIO_PASSWORD }}
                
      run: |
        cd $REPORT_MALWARE_PRIVATE
        python "$REPORT_MALWARE_PRIVATE/urlscan.io/urlscan_io.py" -i "/tmp/new_OpenSquat_domains_with_existing_IPv4_or_IPv6" -a submit > /dev/null
