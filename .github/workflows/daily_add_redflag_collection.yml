name: Daily addition of red.flag.domains to several providers (VirusTotal, urlscan.io, Lookyloo, CRDF etc.)

on: 
  schedule:
    - cron:  '10 5 * * *'

jobs:
  virustotal:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVKEY_TO_REPORT_PRIVATE }}
        repository: maaaaz/report_malware
        path: ./REPORT_MALWARE_PRIVATE
    
    - name: Set $REPORT_MALWARE_PRIVATE environment variable for the rest of the workflow
      run: echo "REPORT_MALWARE_PRIVATE=$GITHUB_WORKSPACE/REPORT_MALWARE_PRIVATE" >> $GITHUB_ENV
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: What time is it ?
      run: |
        date -u
        TZ="Europe/Paris" date

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r $REPORT_MALWARE_PRIVATE/virustotal/requirements.txt
    
    - name: Add the current full list of red.flag.domains to Virustotal specific collection
      env: 
        VIRUSTOTAL_API_KEY: ${{ secrets.VIRUSTOTAL_API_KEY }}
        VIRUSTOTAL_REDFLAG_COLLECTION_ID: ${{ secrets.VIRUSTOTAL_REDFLAG_COLLECTION_ID }}
        
      run: |
        TODAY_FILE_DATE_FULL=$(date --date="yesterday" '+%Y/%m/%Y-%m-%d')
        TODAY_FILE_DATE=$(date --date="yesterday" '+%Y-%m-%d')
        TODAY_FILE_DATE_CSV=$TODAY_FILE_DATE.csv
        TODAY_FILE_DATE_TXT=$TODAY_FILE_DATE.txt
        
        cd $REPORT_MALWARE_PRIVATE
        git pull --ff-only
        
        cd /tmp/
        #wget https://dl.red.flag.domains/red.flag.domains.txt
        #sed -i '/^#/d' red.flag.domains.txt
        
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/$TODAY_FILE_DATE_FULL.csv"
        csvcut -x -c 'fqdn' ./$TODAY_FILE_DATE_CSV| sed 1d| tee /tmp/$TODAY_FILE_DATE_TXT
        
        cd $REPORT_MALWARE_PRIVATE
        python $REPORT_MALWARE_PRIVATE/virustotal/vt_add_to_collection.py -a "$VIRUSTOTAL_API_KEY" -c "$VIRUSTOTAL_REDFLAG_COLLECTION_ID" -i "/tmp/$TODAY_FILE_DATE_TXT"
        
      
  urlscan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVKEY_TO_REPORT_PRIVATE }}
        repository: maaaaz/report_malware
        path: ./REPORT_MALWARE_PRIVATE
  
    - name: Set $REPORT_MALWARE_PRIVATE environment variable for the rest of the workflow
      run: echo "REPORT_MALWARE_PRIVATE=$GITHUB_WORKSPACE/REPORT_MALWARE_PRIVATE" >> $GITHUB_ENV
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r $REPORT_MALWARE_PRIVATE/urlscan.io/requirements.txt
              
    - name: Scan the current full list of red.flag.domains to urlscan.io
      env: 
        SECRET_URLSCANIO_API_KEY: ${{ secrets.SECRET_URLSCANIO_API_KEY }}
        SECRET_URLSCANIO_LOGIN: ${{ secrets.SECRET_URLSCANIO_LOGIN }}
        SECRET_URLSCANIO_PASSWORD: ${{ secrets.SECRET_URLSCANIO_PASSWORD }}
                
      run: |
        cd $REPORT_MALWARE_PRIVATE
        git pull --ff-only
        
        TODAY_URLSCAN_PATH=$(date --date="yesterday" '+%Y/%m/%Y-%m-%d/urlscan')
        mkdir -p "$TODAY_URLSCAN_PATH"
        
        TODAY_FILE_DATE_FULL=$(date --date="yesterday" '+%Y/%m/%Y-%m-%d')
        TODAY_FILE_DATE=$(date --date="yesterday" '+%Y-%m-%d')
                
        TODAY_FILE_DATE_CSV=$TODAY_FILE_DATE.csv
        TODAY_FILE_DATE_TXT=$TODAY_FILE_DATE.txt
        
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/$TODAY_FILE_DATE_FULL.csv"
        csvcut -x -c 'fqdn' ./$TODAY_FILE_DATE_CSV| sed 1d| tee /tmp/$TODAY_FILE_DATE_TXT
        
        cd $REPORT_MALWARE_PRIVATE
        python $REPORT_MALWARE_PRIVATE/urlscan.io/urlscan_io.py -i "/tmp/$TODAY_FILE_DATE_TXT" -a submit_and_pivot -y
        
        cd "$REPORT_MALWARE_PRIVATE/$TODAY_URLSCAN_PATH"
        python $REPORT_MALWARE_PRIVATE/urlscan.io/urlscan_io.py -i "./results_hashes_to_monitor.txt" -a search -oq results_hashes_to_monitor_query.txt
        
        cd "$REPORT_MALWARE_PRIVATE/$TODAY_URLSCAN_PATH"
        git config user.name urlscan-scraping-bot
        git config user.email github-actions@github.com
        git add ./*.txt
        git add ./*.json
        echo 'after git add'
        
        git commit -m "red.flag.domains urlscan and pivot bot - $(date --date="yesterday" '+%Y/%m/%d')"
        echo 'after git commit'
        
        echo 'before git pull --rebase'
        git pull --rebase
        echo 'after git pull --rebase'
        
        cd "$REPORT_MALWARE_PRIVATE/$TODAY_URLSCAN_PATH"
        git push 
        echo 'after git push'

  lookyloo:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVKEY_TO_REPORT_PRIVATE }}
        repository: maaaaz/report_malware
        path: ./REPORT_MALWARE_PRIVATE
  
    - name: Set $REPORT_MALWARE_PRIVATE environment variable for the rest of the workflow
      run: echo "REPORT_MALWARE_PRIVATE=$GITHUB_WORKSPACE/REPORT_MALWARE_PRIVATE" >> $GITHUB_ENV
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Scan the current full list of red.flag.domains to lookyloo.circl.lu
      run: |
        sudo apt update && sudo apt install parallel gawk -y
        pip install pylookyloo csvkit --upgrade
        
        cd $REPORT_MALWARE_PRIVATE
        
        TODAY_FILE_DATE_FULL=$(date --date="yesterday" '+%Y/%m/%Y-%m-%d')
        TODAY_FILE_DATE=$(date --date="yesterday" '+%Y-%m-%d')
                
        TODAY_FILE_DATE_CSV=$TODAY_FILE_DATE.csv
        TODAY_FILE_DATE_TXT=$TODAY_FILE_DATE.txt
        
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/$TODAY_FILE_DATE_FULL.csv"
        csvcut -x -c 'fqdn' ./$TODAY_FILE_DATE_CSV| sed 1d| tee /tmp/$TODAY_FILE_DATE_TXT
        
        awk '{print "http://"$1"\n""https://"$1}' "/tmp/$TODAY_FILE_DATE_TXT" > "/tmp/today_expanded"
        parallel -a "/tmp/today_expanded" 'echo {} && lookyloo --listing --query "{}" && echo --'
       
  netcraft:
    needs: urlscan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVKEY_TO_REPORT_PRIVATE }}
        repository: maaaaz/report_malware
        path: ./REPORT_MALWARE_PRIVATE
  
    - name: Set $REPORT_MALWARE_PRIVATE environment variable for the rest of the workflow
      run: echo "REPORT_MALWARE_PRIVATE=$GITHUB_WORKSPACE/REPORT_MALWARE_PRIVATE" >> $GITHUB_ENV
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Netcraft dependencies
      run: |
        python -m pip install --upgrade pip
                
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/netcraft_requirements.txt"
        pip install -r ./netcraft_requirements.txt
        
    - name: Submit the previous day publication pivot from urlscan.io to Netcraft
      continue-on-error: true
      env:
        SECRET_NETCRAFT_REPORT_MAIL: ${{ secrets.SECRET_NETCRAFT_REPORT_MAIL }}
        
      run: |
        cd $REPORT_MALWARE_PRIVATE
        git pull --ff-only
        
        TODAY_NETCRAFT_SUBS_DIR=$REPORT_MALWARE_PRIVATE/$(date '+%Y/%m/%Y-%m-%d/netcraft')
        mkdir -p "$TODAY_NETCRAFT_SUBS_DIR"
        TODAY_NETCRAFT_SUBS_FILE=$TODAY_NETCRAFT_SUBS_DIR/submissions.txt
        
        TODAY_URLSCAN_PATH=$(date --date="yesterday" '+%Y/%m/%Y-%m-%d/urlscan')
                
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/netcraft.py"
        cat "$REPORT_MALWARE_PRIVATE/$TODAY_URLSCAN_PATH/results_similar"* > /tmp/to_netcraft_submit
        ls -alh "/tmp/to_netcraft_submit" && wc "/tmp/to_netcraft_submit"
        
        TZ="Europe/Paris" date
        (TZ="Europe/Paris" date && python /tmp/netcraft.py -a submit -i "/tmp/to_netcraft_submit";) >> $TODAY_NETCRAFT_SUBS_FILE
        
        (TZ="Europe/Paris" date && python /tmp/netcraft.py -a submit -i "$REPORT_MALWARE_PRIVATE/$TODAY_URLSCAN_PATH/results_hashes_to_monitor_query.txt";) >> $TODAY_NETCRAFT_SUBS_FILE
        
        echo 'after submision'
        # -- git stuff
        cd $REPORT_MALWARE_PRIVATE
        git config user.name netcraft-subs-bot
        git config user.email github-actions@github.com
        git add $TODAY_NETCRAFT_SUBS_FILE
        git commit -m "netcraft sub of red.flag.domains urlscan and pivot" $TODAY_NETCRAFT_SUBS_FILE
        git pull --rebase
        
        cd "$REPORT_MALWARE_PRIVATE/$TODAY_URLSCAN_PATH"
        git push
        
        
  crdf:
    needs: urlscan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVKEY_TO_REPORT_PRIVATE }}
        repository: maaaaz/report_malware
        path: ./REPORT_MALWARE_PRIVATE
  
    - name: Set $REPORT_MALWARE_PRIVATE environment variable for the rest of the workflow
      run: echo "REPORT_MALWARE_PRIVATE=$GITHUB_WORKSPACE/REPORT_MALWARE_PRIVATE" >> $GITHUB_ENV
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install CRDF dependencies
      run: |
        python -m pip install --upgrade pip
        
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/crdf_requirements.txt"
        pip install -r ./crdf_requirements.txt
        
    - name: Submit the previous day publication pivot from urlscan.io to CRDF
      env:
        SECRET_CRDF_API_KEY: ${{ secrets.SECRET_CRDF_API_KEY }}
        
      run: |
        TODAY_URLSCAN_PATH=$(date --date="yesterday" '+%Y/%m/%Y-%m-%d/urlscan')
        
        cd $REPORT_MALWARE_PRIVATE
        git pull
        
        cd /tmp/
        wget -nv "https://github.com/maaaaz/red.flag.domains-publications/raw/main/_resources/crdf.py"
        
        cat "$REPORT_MALWARE_PRIVATE/$TODAY_URLSCAN_PATH/results_similar"* > /tmp/to_crdf_submit
        ls -alh "/tmp/to_crdf_submit" && wc "/tmp/to_crdf_submit"
        python /tmp/crdf.py -a submit -i "/tmp/to_crdf_submit"       
